# Build stage
FROM node:20-alpine AS builder
WORKDIR /app
COPY package*.json ./
RUN npm ci
COPY . .

# Production stage
FROM node:20-alpine
RUN apk add --no-cache postgresql-client curl
WORKDIR /app
ENV NODE_ENV=production

# Create a non-root user and group (we'll switch after preparing files)
RUN addgroup -S finx && adduser -S finx -G finx

# Copy package files and install production dependencies (as root)
COPY --from=builder /app/package*.json ./
RUN npm ci --omit=dev

# Copy the rest of the application code (as root)
COPY --from=builder /app .

# Ensure shell scripts are executable and have UNIX line endings (run as root)
RUN chmod +x /app/scripts/*.sh && sed -i 's/\r$//' /app/scripts/*.sh

# Fix ownership of the app directory after all files are in place
RUN chown -R finx:finx /app

# Switch to the non-root user for runtime
USER finx

EXPOSE 5000

HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD wget -q --spider http://localhost:5000/health || exit 1

CMD ["./scripts/start-backend.sh"]
