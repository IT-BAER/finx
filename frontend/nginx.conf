pid /var/run/nginx/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Security headers
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'; connect-src 'self' http://finx-backend:5000; frame-src 'none'; object-src 'none'" always;
    
    # Enable HSTS (uncomment when TLS enabled)
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_min_length 1000;
    gzip_proxied any;

    # Cache control
    map $sent_http_content_type $expires {
        default                    off;
        text/html                  epoch;
        text/css                   max;
        application/javascript     max;
        ~image/                    max;
    }

    upstream backend {
        server finx-backend:5000;
    }

    server {
        listen 80;
        server_name localhost;

        # Redirect to HTTPS (uncomment when TLS enabled)
        # return 301 https://$host$request_uri;

        # PWA manifest and service worker files
        location ~* \.(webmanifest|json)$ {
            root /usr/share/nginx/html;
            add_header Content-Type application/manifest+json;
            add_header Cache-Control "public, max-age=86400";
            expires 1d;
        }

        location /sw.js {
            root /usr/share/nginx/html;
            add_header Content-Type application/javascript;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            expires 0;
        }

        location /workbox-*.js {
            root /usr/share/nginx/html;
            add_header Content-Type application/javascript;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            expires 0;
        }

        # Offline page
        location /offline.html {
            root /usr/share/nginx/html;
            add_header Cache-Control "public, max-age=86400";
            expires 1d;
        }

        # Static assets with long cache
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            root /usr/share/nginx/html;
            expires 1y;
            add_header Cache-Control "public, max-age=31536000, immutable";
        }

        # Main app routes
        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
            try_files $uri $uri/ /index.html;
            
            # No cache for HTML files to ensure updates are received
            location ~* \.html$ {
                add_header Cache-Control "no-cache, no-store, must-revalidate";
                expires 0;
            }
        }

        location /api {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        location /socket.io/ {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }

    # HTTPS server (uncomment and configure when TLS enabled)
    # server {
    #     listen 443 ssl http2;
    #     server_name localhost;
    #
    #     ssl_certificate /etc/ssl/certs/finx.crt;
    #     ssl_certificate_key /etc/ssl/private/finx.key;
    #
    #     # SSL configuration
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    #     ssl_prefer_server_ciphers on;
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_session_timeout 10m;
    #
    #     location / {
    #         root /usr/share/nginx/html;
    #         index index.html index.htm;
    #         try_files $uri $uri/ /index.html;
    #     }
    #
    #     # Include API proxy config from above
    #     include /etc/nginx/api-proxy.conf;
    # }
}
